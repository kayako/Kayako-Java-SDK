package com.kayako.sdk.messenger.conversation.fields.priority;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import static org.junit.Assert.assertNotNull;

public class PriorityIncludeArgumentTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: PriorityIncludeArgument */
    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */
    @Test
    public void clinit() throws Throwable {
        Object constructed;
        {
            /* Act */
            /* Using constructor to test static initializer */
            constructed = Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.priority.PriorityIncludeArgument");
            assertNotNull(constructed);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 17 branch to line 17
   */
    @Test
    public void init() throws Throwable {
        PriorityIncludeArgument instance;
        {
            /* Act */
            /* Creating object to test constructor */
            instance = new PriorityIncludeArgument();
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }
}
