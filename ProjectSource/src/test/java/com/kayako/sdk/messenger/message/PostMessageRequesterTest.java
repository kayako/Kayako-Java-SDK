package com.kayako.sdk.messenger.message;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class PostMessageRequesterTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: PostMessageRequester */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 39 branch to line 39
     * conditional line 41 branch to line 45
     * conditional line 45 branch to line 49
     * conditional line 49 branch to line 54
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 39 branch to line 39
     * conditional line 41 branch to line 45
     * conditional line 45 branch to line 46
     * conditional line 46 branch to line 46
     * conditional line 49 branch to line 54
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 39 branch to line 39
     * conditional line 41 branch to line 45
     * conditional line 45 branch to line 49
     * conditional line 49 branch to line 50
     * conditional line 50 branch to line 50

     * conditional line 50 branch to line 54
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 39 branch to line 39
     * conditional line 41 branch to line 42
     * conditional line 42 branch to line 42
     * conditional line 45 branch to line 46
     * conditional line 46 branch to line 46
     * conditional line 49 branch to line 54
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 39 branch to line 39
     * conditional line 41 branch to line 42
     * conditional line 42 branch to line 42
     * conditional line 45 branch to line 46
     * conditional line 46 branch to line 46
     * conditional line 49 branch to line 50
     * conditional line 50 branch to line 50

     * conditional line 50 branch to line 50
     * conditional line 51 branch to line 51

     * conditional line 50 branch to line 54
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageRequester_getAttachmentFiles_000_ddc4ca81a1271f4() throws Throwable {
        java.util.Map<String, com.kayako.sdk.base.requester.AttachmentFile> retval;
        {
            /* Arrange */
            String param_1 = "";
            PostMessageRequester param_2 = (PostMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageRequester");
            Reflector.setField(param_2, "mAttachmentFiles", null);
            Reflector.setField(param_2, "mHelpDeskUrl", param_1);
            Reflector.setField(param_2, "mFingerprintAuth", null);
            Reflector.setField(param_2, "mConversationId", null);
            Reflector.setField(param_2, "mBodyParams", null);
            /* Act */
            retval = param_2.getAttachmentFiles();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageRequester_getBodyParameters_000_bece2fa63a5143f2() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            String param_1 = "";
            PostMessageRequester param_2 = (PostMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageRequester");
            Reflector.setField(param_2, "mAttachmentFiles", null);
            Reflector.setField(param_2, "mHelpDeskUrl", param_1);
            Reflector.setField(param_2, "mFingerprintAuth", null);
            Reflector.setField(param_2, "mConversationId", null);
            Reflector.setField(param_2, "mBodyParams", null);
            /* Act */
            retval = param_2.getBodyParameters();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageRequester_getHeaders_000_d96e868ec0f64d5c() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            com.kayako.sdk.auth.FingerprintAuth param_0 = (com.kayako.sdk.auth.FingerprintAuth) Reflector.getInstance("com.kayako.sdk.auth.FingerprintAuth");
            Reflector.setField(param_0, "fingerprintId", null);
            String param_2 = "";
            PostMessageRequester param_3 = (PostMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageRequester");
            Reflector.setField(param_3, "mAttachmentFiles", null);
            Reflector.setField(param_3, "mHelpDeskUrl", param_2);
            Reflector.setField(param_3, "mFingerprintAuth", param_0);
            Reflector.setField(param_3, "mConversationId", null);
            Reflector.setField(param_3, "mBodyParams", null);
            /* Act */
            retval = param_3.getHeaders();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            java.util.HashMap hashMap = new java.util.HashMap();
            hashMap.put("X-Fingerprint-ID", null);
            Assert.assertEquals(hashMap, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageRequester_getHelpCenterUrl_000_158c6664fcabbdb6() throws Throwable {
        String retval;
        {
            /* Arrange */
            PostMessageRequester param_0 = (PostMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageRequester");
            Reflector.setField(param_0, "mAttachmentFiles", null);
            Reflector.setField(param_0, "mHelpDeskUrl", null);
            Reflector.setField(param_0, "mFingerprintAuth", null);
            Reflector.setField(param_0, "mConversationId", null);
            Reflector.setField(param_0, "mBodyParams", null);
            /* Act */
            retval = param_0.getHelpCenterUrl();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
}
