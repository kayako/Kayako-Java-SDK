package com.kayako.sdk.messenger.rating;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import java.lang.reflect.Array;

public class PostRatingRequesterTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: PostRatingRequester */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 33 branch to line 33
     * conditional line 34 branch to line 35
     * conditional line 35 branch to line 35
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_rating_PostRatingRequester_getBodyParameters_000_5b0b62b429bf704() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            String param_1 = "";
            PostRatingRequester param_2 = (PostRatingRequester) Reflector.getInstance("com.kayako.sdk.messenger.rating.PostRatingRequester");
            Reflector.setField(param_2, "mFingerprintAuth", null);
            Reflector.setField(param_2, "mConversationId", 0L);
            Reflector.setField(param_2, "mBodyParams", null);
            Reflector.setField(param_2, "mHelpdeskUrl", param_1);
            /* Act */
            retval = param_2.getBodyParameters();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_rating_PostRatingRequester_getHeaders_000_160758c5136f26b5() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            com.kayako.sdk.auth.FingerprintAuth param_0 = (com.kayako.sdk.auth.FingerprintAuth) Reflector.getInstance("com.kayako.sdk.auth.FingerprintAuth");
            Reflector.setField(param_0, "fingerprintId", null);
            String param_2 = "";
            PostRatingRequester param_3 = (PostRatingRequester) Reflector.getInstance("com.kayako.sdk.messenger.rating.PostRatingRequester");
            Reflector.setField(param_3, "mFingerprintAuth", param_0);
            Reflector.setField(param_3, "mConversationId", 0L);
            Reflector.setField(param_3, "mBodyParams", null);
            Reflector.setField(param_3, "mHelpdeskUrl", param_2);
            /* Act */
            retval = param_3.getHeaders();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            java.util.HashMap hashMap = new java.util.HashMap();
            hashMap.put("X-Fingerprint-ID", null);
            Assert.assertEquals(hashMap, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_rating_PostRatingRequester_getHelpCenterUrl_000_8a4a8760b793e48c() throws Throwable {
        String retval;
        {
            /* Arrange */
            PostRatingRequester param_0 = (PostRatingRequester) Reflector.getInstance("com.kayako.sdk.messenger.rating.PostRatingRequester");
            Reflector.setField(param_0, "mFingerprintAuth", null);
            Reflector.setField(param_0, "mConversationId", 0L);
            Reflector.setField(param_0, "mBodyParams", null);
            Reflector.setField(param_0, "mHelpdeskUrl", null);
            /* Act */
            retval = param_0.getHelpCenterUrl();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
}
