package com.kayako.sdk.messenger.conversation.fields.priority;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class PriorityTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Priority */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_priority_Priority_getCreatedAt_000_14abad46240a85e4() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            Priority param_2 = (Priority) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.priority.Priority");
            Reflector.setField(param_2, "updatedAt", null);
            Reflector.setField(param_2, "level", 0);
            Reflector.setField(param_2, "id", null);
            Reflector.setField(param_2, "label", param_1);
            Reflector.setField(param_2, "createdAt", null);
            /* Act */
            retval = param_2.getCreatedAt();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_priority_Priority_getId_000_bf6844703e772738() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            Priority param_2 = (Priority) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.priority.Priority");
            Reflector.setField(param_2, "updatedAt", null);
            Reflector.setField(param_2, "level", 0);
            Reflector.setField(param_2, "id", null);
            Reflector.setField(param_2, "label", param_1);
            Reflector.setField(param_2, "createdAt", null);
            /* Act */
            retval = param_2.getId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_priority_Priority_getLabel_000_cbd5efa86748ba14() throws Throwable {
        String retval;
        {
            /* Arrange */
            Priority param_0 = (Priority) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.priority.Priority");
            Reflector.setField(param_0, "updatedAt", null);
            Reflector.setField(param_0, "level", 0);
            Reflector.setField(param_0, "id", null);
            Reflector.setField(param_0, "label", null);
            Reflector.setField(param_0, "createdAt", null);
            /* Act */
            retval = param_0.getLabel();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_priority_Priority_getLevel_000_15f17b9b7d6e73e1() throws Throwable {
        int retval;
        {
            /* Arrange */
            String param_1 = "";
            Priority param_2 = (Priority) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.priority.Priority");
            Reflector.setField(param_2, "updatedAt", null);
            Reflector.setField(param_2, "level", 0);
            Reflector.setField(param_2, "id", null);
            Reflector.setField(param_2, "label", param_1);
            Reflector.setField(param_2, "createdAt", null);
            /* Act */
            retval = param_2.getLevel();
        }
        {
            /* Assert result */
            Assert.assertEquals(0, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_priority_Priority_getUpdatedAt_000_f59d09a93b725c68() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            Priority param_2 = (Priority) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.priority.Priority");
            Reflector.setField(param_2, "updatedAt", null);
            Reflector.setField(param_2, "level", 0);
            Reflector.setField(param_2, "id", null);
            Reflector.setField(param_2, "label", param_1);
            Reflector.setField(param_2, "createdAt", null);
            /* Act */
            retval = param_2.getUpdatedAt();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
}
