package com.kayako.sdk.messenger.conversation.fields.readmarker;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class ReadMarkerTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: ReadMarker */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_readmarker_ReadMarker_getId_000_42c82de035313455() throws Throwable {
        Long retval;
        {
            /* Arrange */
            ReadMarker param_0 = (ReadMarker) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.readmarker.ReadMarker");
            Reflector.setField(param_0, "unreadCount", null);
            Reflector.setField(param_0, "lastReadAt", null);
            Reflector.setField(param_0, "lastReadPostId", null);
            Reflector.setField(param_0, "id", null);
            /* Act */
            retval = param_0.getId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_readmarker_ReadMarker_getLastReadAt_000_8737dc0fba9f68cc() throws Throwable {
        Long retval;
        {
            /* Arrange */
            ReadMarker param_0 = (ReadMarker) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.readmarker.ReadMarker");
            Reflector.setField(param_0, "unreadCount", null);
            Reflector.setField(param_0, "lastReadAt", null);
            Reflector.setField(param_0, "lastReadPostId", null);
            Reflector.setField(param_0, "id", null);
            /* Act */
            retval = param_0.getLastReadAt();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_readmarker_ReadMarker_getLastReadPostId_000_3acb31619dd61c() throws Throwable {
        Long retval;
        {
            /* Arrange */
            ReadMarker param_0 = (ReadMarker) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.readmarker.ReadMarker");
            Reflector.setField(param_0, "unreadCount", null);
            Reflector.setField(param_0, "lastReadAt", null);
            Reflector.setField(param_0, "lastReadPostId", null);
            Reflector.setField(param_0, "id", null);
            /* Act */
            retval = param_0.getLastReadPostId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_fields_readmarker_ReadMarker_getUnreadCount_000_9addf65e5a2f5b5f() throws Throwable {
        Integer retval;
        {
            /* Arrange */
            ReadMarker param_0 = (ReadMarker) Reflector.getInstance("com.kayako.sdk.messenger.conversation.fields.readmarker.ReadMarker");
            Reflector.setField(param_0, "unreadCount", null);
            Reflector.setField(param_0, "lastReadAt", null);
            Reflector.setField(param_0, "lastReadPostId", null);
            Reflector.setField(param_0, "id", null);
            /* Act */
            retval = param_0.getUnreadCount();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
}
