package com.kayako.sdk.messenger.attachment;

import com.diffblue.deeptestutils.Reflector;
import java.util.List;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class AttachmentTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Attachment */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void init() throws Throwable {
        Attachment instance;
        {
            /* Arrange */
            Long id = null;
            String name = null;
            Long size = null;
            Long width = null;
            Long height = null;
            String type = null;
            String url = null;
            String urlDownload = null;
            List<Thumbnail> thumbnails = null;
            Long createdAt = null;
            /* Act */
            /* Creating object to test constructor */
            instance = new Attachment(id, name, size, width, height, type, url, urlDownload, thumbnails, createdAt);
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getCreatedAt() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Long param6 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param6, "value", 0L);
            String param8 = "";
            Attachment param9 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param9, "thumbnails", null);
            Reflector.setField(param9, "urlDownload", param1);
            Reflector.setField(param9, "url", param3);
            Reflector.setField(param9, "height", null);
            Reflector.setField(param9, "createdAt", null);
            Reflector.setField(param9, "id", null);
            Reflector.setField(param9, "name", param8);
            Reflector.setField(param9, "width", param6);
            Reflector.setField(param9, "type", param5);
            Reflector.setField(param9, "size", null);
            /* Act */
            retval = param9.getCreatedAt();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getHeight() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Long param6 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param6, "value", 0L);
            String param8 = "";
            Attachment param9 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param9, "thumbnails", null);
            Reflector.setField(param9, "urlDownload", param1);
            Reflector.setField(param9, "url", param3);
            Reflector.setField(param9, "height", null);
            Reflector.setField(param9, "createdAt", null);
            Reflector.setField(param9, "id", null);
            Reflector.setField(param9, "name", param8);
            Reflector.setField(param9, "width", param6);
            Reflector.setField(param9, "type", param5);
            Reflector.setField(param9, "size", null);
            /* Act */
            retval = param9.getHeight();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getId() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Long param6 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param6, "value", 0L);
            String param8 = "";
            Attachment param9 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param9, "thumbnails", null);
            Reflector.setField(param9, "urlDownload", param1);
            Reflector.setField(param9, "url", param3);
            Reflector.setField(param9, "height", null);
            Reflector.setField(param9, "createdAt", null);
            Reflector.setField(param9, "id", null);
            Reflector.setField(param9, "name", param8);
            Reflector.setField(param9, "width", param6);
            Reflector.setField(param9, "type", param5);
            Reflector.setField(param9, "size", null);
            /* Act */
            retval = param9.getId();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getName() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Long param6 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param6, "value", 0L);
            Attachment param7 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param7, "thumbnails", null);
            Reflector.setField(param7, "urlDownload", param1);
            Reflector.setField(param7, "url", param3);
            Reflector.setField(param7, "height", null);
            Reflector.setField(param7, "createdAt", null);
            Reflector.setField(param7, "id", null);
            Reflector.setField(param7, "name", null);
            Reflector.setField(param7, "width", param6);
            Reflector.setField(param7, "type", param5);
            Reflector.setField(param7, "size", null);
            /* Act */
            retval = param7.getName();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getSize() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            Attachment param8 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param8, "thumbnails", null);
            Reflector.setField(param8, "urlDownload", param1);
            Reflector.setField(param8, "url", param3);
            Reflector.setField(param8, "height", null);
            Reflector.setField(param8, "createdAt", null);
            Reflector.setField(param8, "id", null);
            Reflector.setField(param8, "name", param7);
            Reflector.setField(param8, "width", null);
            Reflector.setField(param8, "type", param5);
            Reflector.setField(param8, "size", null);
            /* Act */
            retval = param8.getSize();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getThumbnails() throws Throwable {
        List<Thumbnail> retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Long param6 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param6, "value", 0L);
            String param8 = "";
            Attachment param9 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param9, "thumbnails", null);
            Reflector.setField(param9, "urlDownload", param1);
            Reflector.setField(param9, "url", param3);
            Reflector.setField(param9, "height", null);
            Reflector.setField(param9, "createdAt", null);
            Reflector.setField(param9, "id", null);
            Reflector.setField(param9, "name", param8);
            Reflector.setField(param9, "width", param6);
            Reflector.setField(param9, "type", param5);
            Reflector.setField(param9, "size", null);
            /* Act */
            retval = param9.getThumbnails();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getType() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            Long param4 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param4, "value", 0L);
            String param6 = "";
            Attachment param7 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param7, "thumbnails", null);
            Reflector.setField(param7, "urlDownload", param1);
            Reflector.setField(param7, "url", param3);
            Reflector.setField(param7, "height", null);
            Reflector.setField(param7, "createdAt", null);
            Reflector.setField(param7, "id", null);
            Reflector.setField(param7, "name", param6);
            Reflector.setField(param7, "width", param4);
            Reflector.setField(param7, "type", null);
            Reflector.setField(param7, "size", null);
            /* Act */
            retval = param7.getType();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getUrlDownload() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Attachment param6 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param6, "thumbnails", null);
            Reflector.setField(param6, "urlDownload", null);
            Reflector.setField(param6, "url", param1);
            Reflector.setField(param6, "height", null);
            Reflector.setField(param6, "createdAt", null);
            Reflector.setField(param6, "id", null);
            Reflector.setField(param6, "name", param5);
            Reflector.setField(param6, "width", null);
            Reflector.setField(param6, "type", param3);
            Reflector.setField(param6, "size", null);
            /* Act */
            retval = param6.getUrlDownload();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getUrl() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            Long param4 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param4, "value", 0L);
            String param6 = "";
            Attachment param7 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param7, "thumbnails", null);
            Reflector.setField(param7, "urlDownload", param1);
            Reflector.setField(param7, "url", null);
            Reflector.setField(param7, "height", null);
            Reflector.setField(param7, "createdAt", null);
            Reflector.setField(param7, "id", null);
            Reflector.setField(param7, "name", param6);
            Reflector.setField(param7, "width", param4);
            Reflector.setField(param7, "type", param3);
            Reflector.setField(param7, "size", null);
            /* Act */
            retval = param7.getUrl();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getWidth() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            Attachment param8 = (Attachment) Reflector.getInstance("com.kayako.sdk.messenger.attachment.Attachment");
            Reflector.setField(param8, "thumbnails", null);
            Reflector.setField(param8, "urlDownload", param1);
            Reflector.setField(param8, "url", param3);
            Reflector.setField(param8, "height", null);
            Reflector.setField(param8, "createdAt", null);
            Reflector.setField(param8, "id", null);
            Reflector.setField(param8, "name", param7);
            Reflector.setField(param8, "width", null);
            Reflector.setField(param8, "type", param5);
            Reflector.setField(param8, "size", null);
            /* Act */
            retval = param8.getWidth();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }
}
