package com.kayako.sdk.messenger.conversation;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class ConversationTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Conversation */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getAssignedTeam_000_76c1bef59469b5ca() throws Throwable {
        com.kayako.sdk.messenger.conversation.fields.team.Team retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getAssignedTeam();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getChannel_000_2ce820bfc21f17cd() throws Throwable {
        com.kayako.sdk.messenger.conversation.fields.ChannelType retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            String param_7 = "";
            String param_9 = "";
            Conversation param_10 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_10, "updatedAt", null);
            Reflector.setField(param_10, "createdAt", null);
            Reflector.setField(param_10, "lastRepliedAt", null);
            Reflector.setField(param_10, "lastMessagePreview", param_1);
            Reflector.setField(param_10, "priority", null);
            Reflector.setField(param_10, "lastMessageStatus", null);
            Reflector.setField(param_10, "uuid", param_9);
            Reflector.setField(param_10, "id", null);
            Reflector.setField(param_10, "assignedTeam", null);
            Reflector.setField(param_10, "status", null);
            Reflector.setField(param_10, "subject", param_5);
            Reflector.setField(param_10, "channel", null);
            Reflector.setField(param_10, "isClosed", null);
            Reflector.setField(param_10, "legacyId", param_7);
            Reflector.setField(param_10, "requester", null);
            Reflector.setField(param_10, "creator", null);
            Reflector.setField(param_10, "readMarker", null);
            Reflector.setField(param_10, "realtimeChannel", param_3);
            Reflector.setField(param_10, "lastAgentReplier", null);
            Reflector.setField(param_10, "lastReplier", null);
            /* Act */
            retval = param_10.getChannel();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getCreatedAt_000_b7994cb31b3e50c() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getCreatedAt();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getCreator_000_8c9560975b312e9f() throws Throwable {
        com.kayako.sdk.helpcenter.user.UserMinimal retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getCreator();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getId_000_b059c2dafe077fdc() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getLastAgentReplier_000_a435c655c0186de4() throws Throwable {
        com.kayako.sdk.helpcenter.user.UserMinimal retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getLastAgentReplier();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getLastMessagePreview_000_a84cbd2ebe90c2d2() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_2 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_2, "name", null);
            Reflector.setField(param_2, "ordinal", 0);
            String param_4 = "";
            String param_6 = "";
            String param_8 = "";
            Conversation param_9 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_9, "updatedAt", null);
            Reflector.setField(param_9, "createdAt", null);
            Reflector.setField(param_9, "lastRepliedAt", null);
            Reflector.setField(param_9, "lastMessagePreview", null);
            Reflector.setField(param_9, "priority", null);
            Reflector.setField(param_9, "lastMessageStatus", null);
            Reflector.setField(param_9, "uuid", param_8);
            Reflector.setField(param_9, "id", null);
            Reflector.setField(param_9, "assignedTeam", null);
            Reflector.setField(param_9, "status", null);
            Reflector.setField(param_9, "subject", param_4);
            Reflector.setField(param_9, "channel", param_2);
            Reflector.setField(param_9, "isClosed", null);
            Reflector.setField(param_9, "legacyId", param_6);
            Reflector.setField(param_9, "requester", null);
            Reflector.setField(param_9, "creator", null);
            Reflector.setField(param_9, "readMarker", null);
            Reflector.setField(param_9, "realtimeChannel", param_1);
            Reflector.setField(param_9, "lastAgentReplier", null);
            Reflector.setField(param_9, "lastReplier", null);
            /* Act */
            retval = param_9.getLastMessagePreview();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getLastMessageStatus_000_49ec6fa280f1d2f6() throws Throwable {
        com.kayako.sdk.messenger.message.MessageStatus retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getLastMessageStatus();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getLastRepliedAt_000_6dcc6945b3b73ca9() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            String param_7 = "";
            String param_9 = "";
            Conversation param_10 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_10, "updatedAt", null);
            Reflector.setField(param_10, "createdAt", null);
            Reflector.setField(param_10, "lastRepliedAt", null);
            Reflector.setField(param_10, "lastMessagePreview", param_1);
            Reflector.setField(param_10, "priority", null);
            Reflector.setField(param_10, "lastMessageStatus", null);
            Reflector.setField(param_10, "uuid", param_9);
            Reflector.setField(param_10, "id", null);
            Reflector.setField(param_10, "assignedTeam", null);
            Reflector.setField(param_10, "status", null);
            Reflector.setField(param_10, "subject", param_5);
            Reflector.setField(param_10, "channel", null);
            Reflector.setField(param_10, "isClosed", null);
            Reflector.setField(param_10, "legacyId", param_7);
            Reflector.setField(param_10, "requester", null);
            Reflector.setField(param_10, "creator", null);
            Reflector.setField(param_10, "readMarker", null);
            Reflector.setField(param_10, "realtimeChannel", param_3);
            Reflector.setField(param_10, "lastAgentReplier", null);
            Reflector.setField(param_10, "lastReplier", null);
            /* Act */
            retval = param_10.getLastRepliedAt();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getLastReplier_000_178c399fbb1a82bc() throws Throwable {
        com.kayako.sdk.helpcenter.user.UserMinimal retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getLastReplier();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getLegacyId_000_3cd5bc3de50423ff() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            Conversation param_9 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_9, "updatedAt", null);
            Reflector.setField(param_9, "createdAt", null);
            Reflector.setField(param_9, "lastRepliedAt", null);
            Reflector.setField(param_9, "lastMessagePreview", param_1);
            Reflector.setField(param_9, "priority", null);
            Reflector.setField(param_9, "lastMessageStatus", null);
            Reflector.setField(param_9, "uuid", param_8);
            Reflector.setField(param_9, "id", null);
            Reflector.setField(param_9, "assignedTeam", null);
            Reflector.setField(param_9, "status", null);
            Reflector.setField(param_9, "subject", param_6);
            Reflector.setField(param_9, "channel", param_4);
            Reflector.setField(param_9, "isClosed", null);
            Reflector.setField(param_9, "legacyId", null);
            Reflector.setField(param_9, "requester", null);
            Reflector.setField(param_9, "creator", null);
            Reflector.setField(param_9, "readMarker", null);
            Reflector.setField(param_9, "realtimeChannel", param_3);
            Reflector.setField(param_9, "lastAgentReplier", null);
            Reflector.setField(param_9, "lastReplier", null);
            /* Act */
            retval = param_9.getLegacyId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getPriority_000_ba319a6c11ce9769() throws Throwable {
        com.kayako.sdk.messenger.conversation.fields.priority.Priority retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getPriority();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getReadMarker_000_aa4c50754ed5da61() throws Throwable {
        com.kayako.sdk.messenger.conversation.fields.readmarker.ReadMarker retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getReadMarker();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getRealtimeChannel_000_8de3b31dd15de6ed() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            String param_7 = "";
            Conversation param_8 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_8, "updatedAt", null);
            Reflector.setField(param_8, "createdAt", null);
            Reflector.setField(param_8, "lastRepliedAt", null);
            Reflector.setField(param_8, "lastMessagePreview", param_1);
            Reflector.setField(param_8, "priority", null);
            Reflector.setField(param_8, "lastMessageStatus", null);
            Reflector.setField(param_8, "uuid", param_7);
            Reflector.setField(param_8, "id", null);
            Reflector.setField(param_8, "assignedTeam", null);
            Reflector.setField(param_8, "status", null);
            Reflector.setField(param_8, "subject", param_3);
            Reflector.setField(param_8, "channel", null);
            Reflector.setField(param_8, "isClosed", null);
            Reflector.setField(param_8, "legacyId", param_5);
            Reflector.setField(param_8, "requester", null);
            Reflector.setField(param_8, "creator", null);
            Reflector.setField(param_8, "readMarker", null);
            Reflector.setField(param_8, "realtimeChannel", null);
            Reflector.setField(param_8, "lastAgentReplier", null);
            Reflector.setField(param_8, "lastReplier", null);
            /* Act */
            retval = param_8.getRealtimeChannel();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getRequester_000_1b323354909534aa() throws Throwable {
        com.kayako.sdk.helpcenter.user.UserMinimal retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getRequester();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getStatus_000_6d20666a498a8806() throws Throwable {
        com.kayako.sdk.messenger.conversation.fields.status.Status retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.getStatus();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getSubject_000_4961a13cdede819c() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            Conversation param_9 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_9, "updatedAt", null);
            Reflector.setField(param_9, "createdAt", null);
            Reflector.setField(param_9, "lastRepliedAt", null);
            Reflector.setField(param_9, "lastMessagePreview", param_1);
            Reflector.setField(param_9, "priority", null);
            Reflector.setField(param_9, "lastMessageStatus", null);
            Reflector.setField(param_9, "uuid", param_8);
            Reflector.setField(param_9, "id", null);
            Reflector.setField(param_9, "assignedTeam", null);
            Reflector.setField(param_9, "status", null);
            Reflector.setField(param_9, "subject", null);
            Reflector.setField(param_9, "channel", param_4);
            Reflector.setField(param_9, "isClosed", null);
            Reflector.setField(param_9, "legacyId", param_6);
            Reflector.setField(param_9, "requester", null);
            Reflector.setField(param_9, "creator", null);
            Reflector.setField(param_9, "readMarker", null);
            Reflector.setField(param_9, "realtimeChannel", param_3);
            Reflector.setField(param_9, "lastAgentReplier", null);
            Reflector.setField(param_9, "lastReplier", null);
            /* Act */
            retval = param_9.getSubject();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getUpdatedAt_000_4bd46cbd2ad8f1f3() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            String param_7 = "";
            String param_9 = "";
            Conversation param_10 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_10, "updatedAt", null);
            Reflector.setField(param_10, "createdAt", null);
            Reflector.setField(param_10, "lastRepliedAt", null);
            Reflector.setField(param_10, "lastMessagePreview", param_1);
            Reflector.setField(param_10, "priority", null);
            Reflector.setField(param_10, "lastMessageStatus", null);
            Reflector.setField(param_10, "uuid", param_9);
            Reflector.setField(param_10, "id", null);
            Reflector.setField(param_10, "assignedTeam", null);
            Reflector.setField(param_10, "status", null);
            Reflector.setField(param_10, "subject", param_5);
            Reflector.setField(param_10, "channel", null);
            Reflector.setField(param_10, "isClosed", null);
            Reflector.setField(param_10, "legacyId", param_7);
            Reflector.setField(param_10, "requester", null);
            Reflector.setField(param_10, "creator", null);
            Reflector.setField(param_10, "readMarker", null);
            Reflector.setField(param_10, "realtimeChannel", param_3);
            Reflector.setField(param_10, "lastAgentReplier", null);
            Reflector.setField(param_10, "lastReplier", null);
            /* Act */
            retval = param_10.getUpdatedAt();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_getUuid_000_2e995c179d52c749() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            Conversation param_9 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_9, "updatedAt", null);
            Reflector.setField(param_9, "createdAt", null);
            Reflector.setField(param_9, "lastRepliedAt", null);
            Reflector.setField(param_9, "lastMessagePreview", param_1);
            Reflector.setField(param_9, "priority", null);
            Reflector.setField(param_9, "lastMessageStatus", null);
            Reflector.setField(param_9, "uuid", null);
            Reflector.setField(param_9, "id", null);
            Reflector.setField(param_9, "assignedTeam", null);
            Reflector.setField(param_9, "status", null);
            Reflector.setField(param_9, "subject", param_6);
            Reflector.setField(param_9, "channel", param_4);
            Reflector.setField(param_9, "isClosed", null);
            Reflector.setField(param_9, "legacyId", param_8);
            Reflector.setField(param_9, "requester", null);
            Reflector.setField(param_9, "creator", null);
            Reflector.setField(param_9, "readMarker", null);
            Reflector.setField(param_9, "realtimeChannel", param_3);
            Reflector.setField(param_9, "lastAgentReplier", null);
            Reflector.setField(param_9, "lastReplier", null);
            /* Act */
            retval = param_9.getUuid();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_Conversation_isClosed_000_2c0bc1e9b103ffa5() throws Throwable {
        Boolean retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            com.kayako.sdk.messenger.conversation.fields.ChannelType param_4 = (com.kayako.sdk.messenger.conversation.fields.ChannelType) Reflector.getInstance("com.kayako.sdk.messenger" + ".conversation.fields.ChannelType");
            Reflector.setField(param_4, "name", null);
            Reflector.setField(param_4, "ordinal", 0);
            String param_6 = "";
            String param_8 = "";
            String param_10 = "";
            Conversation param_11 = (Conversation) Reflector.getInstance("com.kayako.sdk.messenger.conversation.Conversation");
            Reflector.setField(param_11, "updatedAt", null);
            Reflector.setField(param_11, "createdAt", null);
            Reflector.setField(param_11, "lastRepliedAt", null);
            Reflector.setField(param_11, "lastMessagePreview", param_1);
            Reflector.setField(param_11, "priority", null);
            Reflector.setField(param_11, "lastMessageStatus", null);
            Reflector.setField(param_11, "uuid", param_10);
            Reflector.setField(param_11, "id", null);
            Reflector.setField(param_11, "assignedTeam", null);
            Reflector.setField(param_11, "status", null);
            Reflector.setField(param_11, "subject", param_6);
            Reflector.setField(param_11, "channel", param_4);
            Reflector.setField(param_11, "isClosed", null);
            Reflector.setField(param_11, "legacyId", param_8);
            Reflector.setField(param_11, "requester", null);
            Reflector.setField(param_11, "creator", null);
            Reflector.setField(param_11, "readMarker", null);
            Reflector.setField(param_11, "realtimeChannel", param_3);
            Reflector.setField(param_11, "lastAgentReplier", null);
            Reflector.setField(param_11, "lastReplier", null);
            /* Act */
            retval = param_11.isClosed();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
}
