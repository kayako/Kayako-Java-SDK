package com.kayako.sdk.messenger.message;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class PostMessageBodyParamsTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: PostMessageBodyParams */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 26 branch to line 30
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 36 branch to line 40
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 36 branch to line 37
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageBodyParams__init__001_31865e3909bb2d0c() throws Throwable {
        PostMessageBodyParams instance;
        {
            /* Arrange */
            String contents = null;
            MessageSourceType type = null;
            /* Act */
            /* Creating object to test constructor */
            thrown.expect(IllegalStateException.class);
            instance = new PostMessageBodyParams(contents, type);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 26 branch to line 27
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageBodyParams__init__001_5d7e588a8dea0133() throws Throwable {
        PostMessageBodyParams instance;
        {
            /* Arrange */
            String contents = null;
            MessageSourceType type = null;
            String clientId = null;
            /* Act */
            /* Creating object to test constructor */
            thrown.expect(IllegalStateException.class);
            instance = new PostMessageBodyParams(contents, type, clientId);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageBodyParams_getAttachmentFileList_000_e68cf99cab4c8134() throws Throwable {
        java.util.List<com.kayako.sdk.base.requester.AttachmentFile> retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            PostMessageBodyParams param_4 = (PostMessageBodyParams) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageBodyParams");
            Reflector.setField(param_4, "attachmentFileList", null);
            Reflector.setField(param_4, "clientId", param_1);
            Reflector.setField(param_4, "type", null);
            Reflector.setField(param_4, "contents", param_3);
            /* Act */
            retval = param_4.getAttachmentFileList();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageBodyParams_getClientId_000_8c86b3e829a29ed0() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            PostMessageBodyParams param_2 = (PostMessageBodyParams) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageBodyParams");
            Reflector.setField(param_2, "attachmentFileList", null);
            Reflector.setField(param_2, "clientId", null);
            Reflector.setField(param_2, "type", null);
            Reflector.setField(param_2, "contents", param_1);
            /* Act */
            retval = param_2.getClientId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageBodyParams_getContents_000_b236b4f5fd9292d4() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            PostMessageBodyParams param_2 = (PostMessageBodyParams) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageBodyParams");
            Reflector.setField(param_2, "attachmentFileList", null);
            Reflector.setField(param_2, "clientId", param_1);
            Reflector.setField(param_2, "type", null);
            Reflector.setField(param_2, "contents", null);
            /* Act */
            retval = param_2.getContents();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_PostMessageBodyParams_getType_000_3734da58c478585b() throws Throwable {
        MessageSourceType retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            PostMessageBodyParams param_4 = (PostMessageBodyParams) Reflector.getInstance("com.kayako.sdk.messenger.message.PostMessageBodyParams");
            Reflector.setField(param_4, "attachmentFileList", null);
            Reflector.setField(param_4, "clientId", param_1);
            Reflector.setField(param_4, "type", null);
            Reflector.setField(param_4, "contents", param_3);
            /* Act */
            retval = param_4.getType();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
}
