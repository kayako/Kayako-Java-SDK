package com.kayako.sdk.messenger.message;

import com.diffblue.deeptestutils.Reflector;
import com.kayako.sdk.helpcenter.user.UserMinimal;
import com.kayako.sdk.messenger.attachment.Attachment;
import com.kayako.sdk.messenger.conversation.fields.ChannelType;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class MessageTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Message */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void init() throws Throwable {
        Message instance;
        {
            /* Arrange */
            Long id = null;
            String uuid = null;
            String clientId = null;
            String subject = null;
            ChannelType channel = null;
            String contentText = null;
            String contentHtml = null;
            UserMinimal creator = null;
            List<Attachment> attachments = null;
            MessageStatus messageStatus = null;
            Long messageStatusUpdatedAt = null;
            Long createdAt = null;
            Long updatedAt = null;
            /* Act */
            /* Creating object to test constructor */
            instance = new Message(id, uuid, clientId, subject, channel, contentText, contentHtml, creator, attachments, messageStatus, messageStatusUpdatedAt, createdAt, updatedAt);
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getAttachments() throws Throwable {
        List<Attachment> retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getAttachments();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getChannel() throws Throwable {
        ChannelType retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getChannel();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getClientId() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            Message param8 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param8, "updatedAt", null);
            Reflector.setField(param8, "createdAt", null);
            Reflector.setField(param8, "messageStatusUpdatedAt", null);
            Reflector.setField(param8, "clientId", null);
            Reflector.setField(param8, "creator", null);
            Reflector.setField(param8, "uuid", param7);
            Reflector.setField(param8, "id", null);
            Reflector.setField(param8, "subject", param5);
            Reflector.setField(param8, "channel", null);
            Reflector.setField(param8, "contentText", param3);
            Reflector.setField(param8, "contentHtml", param1);
            Reflector.setField(param8, "attachments", null);
            Reflector.setField(param8, "messageStatus", null);
            /* Act */
            retval = param8.getClientId();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getContentHtml() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            Message param8 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param8, "updatedAt", null);
            Reflector.setField(param8, "createdAt", null);
            Reflector.setField(param8, "messageStatusUpdatedAt", null);
            Reflector.setField(param8, "clientId", param5);
            Reflector.setField(param8, "creator", null);
            Reflector.setField(param8, "uuid", param7);
            Reflector.setField(param8, "id", null);
            Reflector.setField(param8, "subject", param3);
            Reflector.setField(param8, "channel", null);
            Reflector.setField(param8, "contentText", param1);
            Reflector.setField(param8, "contentHtml", null);
            Reflector.setField(param8, "attachments", null);
            Reflector.setField(param8, "messageStatus", null);
            /* Act */
            retval = param8.getContentHtml();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getContentText() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            Message param8 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param8, "updatedAt", null);
            Reflector.setField(param8, "createdAt", null);
            Reflector.setField(param8, "messageStatusUpdatedAt", null);
            Reflector.setField(param8, "clientId", param5);
            Reflector.setField(param8, "creator", null);
            Reflector.setField(param8, "uuid", param7);
            Reflector.setField(param8, "id", null);
            Reflector.setField(param8, "subject", param3);
            Reflector.setField(param8, "channel", null);
            Reflector.setField(param8, "contentText", null);
            Reflector.setField(param8, "contentHtml", param1);
            Reflector.setField(param8, "attachments", null);
            Reflector.setField(param8, "messageStatus", null);
            /* Act */
            retval = param8.getContentText();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getCreatedAt() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getCreatedAt();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getCreator() throws Throwable {
        UserMinimal retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getCreator();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getId() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getId();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getMessageStatusUpdatedAt() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getMessageStatusUpdatedAt();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getMessageStatus() throws Throwable {
        MessageStatus retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getMessageStatus();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getSubject() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            Message param8 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param8, "updatedAt", null);
            Reflector.setField(param8, "createdAt", null);
            Reflector.setField(param8, "messageStatusUpdatedAt", null);
            Reflector.setField(param8, "clientId", param5);
            Reflector.setField(param8, "creator", null);
            Reflector.setField(param8, "uuid", param7);
            Reflector.setField(param8, "id", null);
            Reflector.setField(param8, "subject", null);
            Reflector.setField(param8, "channel", null);
            Reflector.setField(param8, "contentText", param3);
            Reflector.setField(param8, "contentHtml", param1);
            Reflector.setField(param8, "attachments", null);
            Reflector.setField(param8, "messageStatus", null);
            /* Act */
            retval = param8.getSubject();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getUpdatedAt() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Message param10 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param10, "updatedAt", null);
            Reflector.setField(param10, "createdAt", null);
            Reflector.setField(param10, "messageStatusUpdatedAt", null);
            Reflector.setField(param10, "clientId", param7);
            Reflector.setField(param10, "creator", null);
            Reflector.setField(param10, "uuid", param9);
            Reflector.setField(param10, "id", null);
            Reflector.setField(param10, "subject", param5);
            Reflector.setField(param10, "channel", null);
            Reflector.setField(param10, "contentText", param3);
            Reflector.setField(param10, "contentHtml", param1);
            Reflector.setField(param10, "attachments", null);
            Reflector.setField(param10, "messageStatus", null);
            /* Act */
            retval = param10.getUpdatedAt();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getUuid() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            Message param8 = (Message) Reflector.getInstance("com.kayako.sdk.messenger.message.Message");
            Reflector.setField(param8, "updatedAt", null);
            Reflector.setField(param8, "createdAt", null);
            Reflector.setField(param8, "messageStatusUpdatedAt", null);
            Reflector.setField(param8, "clientId", param7);
            Reflector.setField(param8, "creator", null);
            Reflector.setField(param8, "uuid", null);
            Reflector.setField(param8, "id", null);
            Reflector.setField(param8, "subject", param5);
            Reflector.setField(param8, "channel", null);
            Reflector.setField(param8, "contentText", param3);
            Reflector.setField(param8, "contentHtml", param1);
            Reflector.setField(param8, "attachments", null);
            Reflector.setField(param8, "messageStatus", null);
            /* Act */
            retval = param8.getUuid();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }
}
