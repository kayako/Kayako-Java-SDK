package com.kayako.sdk.messenger.conversation;

import com.diffblue.deeptestutils.Reflector;
import com.kayako.sdk.auth.FingerprintAuth;
import java.util.HashMap;
import java.util.Map;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class PostConversationRequesterTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: PostConversationRequester */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getBodyParameters() throws Throwable {
        Map<String, String> retval;
        {
            /* Arrange */
            String param1 = "";
            PostConversationRequester param2 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param2, "mFingerprintAuth", null);
            Reflector.setField(param2, "mBodyParams", null);
            Reflector.setField(param2, "mHelpdeskUrl", param1);
            /* Act */
            retval = param2.getBodyParameters();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getEndpointUrl() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            PostConversationRequester param2 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param2, "mFingerprintAuth", null);
            Reflector.setField(param2, "mBodyParams", null);
            Reflector.setField(param2, "mHelpdeskUrl", param1);
            /* Act */
            retval = param2.getEndpointUrl();
        }
        {
            /* Assert result */
            assertNotNull(retval);
            assertEquals("api/v1/conversations", retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getHeaders() throws Throwable {
        Map<String, String> retval;
        {
            /* Arrange */
            FingerprintAuth param0 = (FingerprintAuth) Reflector.getInstance("com.kayako.sdk.auth.FingerprintAuth");
            param0.setFingerprintId(null);
            PostConversationRequester param1 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param1, "mFingerprintAuth", param0);
            Reflector.setField(param1, "mBodyParams", null);
            Reflector.setField(param1, "mHelpdeskUrl", null);
            /* Act */
            retval = param1.getHeaders();
        }
        {
            /* Assert result */
            assertNotNull(retval);
            HashMap hashMap = new HashMap();
            hashMap.put("X-Fingerprint-ID", null);
            assertEquals(hashMap, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getHelpCenterUrl() throws Throwable {
        String retval;
        {
            /* Arrange */
            PostConversationRequester param0 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param0, "mFingerprintAuth", null);
            Reflector.setField(param0, "mBodyParams", null);
            Reflector.setField(param0, "mHelpdeskUrl", null);
            /* Act */
            retval = param0.getHelpCenterUrl();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getQueryParameters() throws Throwable {
        Map<String, String> retval;
        {
            /* Arrange */
            String param1 = "";
            PostConversationRequester param2 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param2, "mFingerprintAuth", null);
            Reflector.setField(param2, "mBodyParams", null);
            Reflector.setField(param2, "mHelpdeskUrl", param1);
            /* Act */
            retval = param2.getQueryParameters();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }
}
