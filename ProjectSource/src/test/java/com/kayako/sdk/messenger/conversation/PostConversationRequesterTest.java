package com.kayako.sdk.messenger.conversation;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class PostConversationRequesterTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: PostConversationRequester */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_PostConversationRequester_getBodyParameters_000_e9267f0cb495a629() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            String param_1 = "";
            PostConversationRequester param_2 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param_2, "mFingerprintAuth", null);
            Reflector.setField(param_2, "mBodyParams", null);
            Reflector.setField(param_2, "mHelpdeskUrl", param_1);
            /* Act */
            retval = param_2.getBodyParameters();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_PostConversationRequester_getEndpointUrl_000_e52c10bf94ae19dc() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            PostConversationRequester param_2 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param_2, "mFingerprintAuth", null);
            Reflector.setField(param_2, "mBodyParams", null);
            Reflector.setField(param_2, "mHelpdeskUrl", param_1);
            /* Act */
            retval = param_2.getEndpointUrl();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            Assert.assertEquals("api/v1/conversations", retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_PostConversationRequester_getHeaders_000_34875a88328de30c() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            com.kayako.sdk.auth.FingerprintAuth param_0 = (com.kayako.sdk.auth.FingerprintAuth) Reflector.getInstance("com.kayako.sdk.auth.FingerprintAuth");
            Reflector.setField(param_0, "fingerprintId", null);
            PostConversationRequester param_1 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param_1, "mFingerprintAuth", param_0);
            Reflector.setField(param_1, "mBodyParams", null);
            Reflector.setField(param_1, "mHelpdeskUrl", null);
            /* Act */
            retval = param_1.getHeaders();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            java.util.HashMap hashMap = new java.util.HashMap();
            hashMap.put("X-Fingerprint-ID", null);
            Assert.assertEquals(hashMap, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_PostConversationRequester_getHelpCenterUrl_000_cb04dd1ea476e882() throws Throwable {
        String retval;
        {
            /* Arrange */
            PostConversationRequester param_0 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param_0, "mFingerprintAuth", null);
            Reflector.setField(param_0, "mBodyParams", null);
            Reflector.setField(param_0, "mHelpdeskUrl", null);
            /* Act */
            retval = param_0.getHelpCenterUrl();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_conversation_PostConversationRequester_getQueryParameters_000_f5f74b752d91e4dd() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            String param_1 = "";
            PostConversationRequester param_2 = (PostConversationRequester) Reflector.getInstance("com.kayako.sdk.messenger.conversation.PostConversationRequester");
            Reflector.setField(param_2, "mFingerprintAuth", null);
            Reflector.setField(param_2, "mBodyParams", null);
            Reflector.setField(param_2, "mHelpdeskUrl", param_1);
            /* Act */
            retval = param_2.getQueryParameters();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
}
