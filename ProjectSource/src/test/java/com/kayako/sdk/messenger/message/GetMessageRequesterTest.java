package com.kayako.sdk.messenger.message;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class GetMessageRequesterTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: GetMessageRequester */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_GetMessageRequester_getEndpointUrl_000_dd95306b60941353() throws Throwable {
        String retval;
        {
            /* Arrange */
            Long param_0 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param_0, "value", 0L);
            Long param_1 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param_1, "value", 8L);
            String param_3 = "!!!!!!!!";
            GetMessageRequester param_4 = (GetMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.GetMessageRequester");
            Reflector.setField(param_4, "mMessageId", param_0);
            Reflector.setField(param_4, "mConversationId", param_1);
            Reflector.setField(param_4, "mFingerprintAuth", null);
            Reflector.setField(param_4, "mHelpDeskUrl", param_3);
            /* Act */
            retval = param_4.getEndpointUrl();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            Assert.assertEquals("api/v1/conversations/8/messages/0", retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_GetMessageRequester_getHeaders_000_e30634152b539bcf() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            com.kayako.sdk.auth.FingerprintAuth param_0 = (com.kayako.sdk.auth.FingerprintAuth) Reflector.getInstance("com.kayako.sdk.auth.FingerprintAuth");
            Reflector.setField(param_0, "fingerprintId", null);
            String param_2 = "";
            GetMessageRequester param_3 = (GetMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.GetMessageRequester");
            Reflector.setField(param_3, "mMessageId", null);
            Reflector.setField(param_3, "mConversationId", null);
            Reflector.setField(param_3, "mFingerprintAuth", param_0);
            Reflector.setField(param_3, "mHelpDeskUrl", param_2);
            /* Act */
            retval = param_3.getHeaders();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            java.util.HashMap hashMap = new java.util.HashMap();
            hashMap.put("X-Fingerprint-ID", null);
            Assert.assertEquals(hashMap, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_GetMessageRequester_getHelpCenterUrl_000_a1109cc7dc846d5e() throws Throwable {
        String retval;
        {
            /* Arrange */
            GetMessageRequester param_0 = (GetMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.GetMessageRequester");
            Reflector.setField(param_0, "mMessageId", null);
            Reflector.setField(param_0, "mConversationId", null);
            Reflector.setField(param_0, "mFingerprintAuth", null);
            Reflector.setField(param_0, "mHelpDeskUrl", null);
            /* Act */
            retval = param_0.getHelpCenterUrl();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_messenger_message_GetMessageRequester_getQueryParameters_000_e52e2516f5f520e0() throws Throwable {
        java.util.Map<String, String> retval;
        {
            /* Arrange */
            String param_1 = "";
            GetMessageRequester param_2 = (GetMessageRequester) Reflector.getInstance("com.kayako.sdk.messenger.message.GetMessageRequester");
            Reflector.setField(param_2, "mMessageId", null);
            Reflector.setField(param_2, "mConversationId", null);
            Reflector.setField(param_2, "mFingerprintAuth", null);
            Reflector.setField(param_2, "mHelpDeskUrl", param_1);
            /* Act */
            retval = param_2.getQueryParameters();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
}
