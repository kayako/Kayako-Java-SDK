package com.kayako.sdk.error;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class KayakoExceptionTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: KayakoException */
    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */
    @Test
    public void init() throws Throwable {
        KayakoException instance;
        {
            /* Arrange */
            ErrorCode code = null;
            String message = null;
            Throwable throwable = null;
            /* Act */
            /* Creating object to test constructor */
            instance = new KayakoException(code, message, throwable);
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */
    @Test
    public void init1() throws Throwable {
        KayakoException instance;
        {
            /* Arrange */
            ErrorCode code = null;
            String message = null;
            ResponseMessages responseMessages = null;
            /* Act */
            /* Creating object to test constructor */
            instance = new KayakoException(code, message, responseMessages);
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */
    @Test
    public void getCode() throws Throwable {
        ErrorCode retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            KayakoException param4 = (KayakoException) Reflector.getInstance("com.kayako.sdk.error.KayakoException");
            Reflector.setField(param4, "responseMessages", null);
            Reflector.setField(param4, "code", null);
            Reflector.setField(param4, "message", param1);
            Reflector.setField(param4, "detailMessage", param3);
            Reflector.setField(param4, "cause", null);
            Reflector.setField(param4, "throwable", null);
            Reflector.setField(param4, "stackTrace", null);
            Reflector.setField(param4, "suppressedExceptions", null);
            /* Act */
            retval = param4.getCode();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */
    @Test
    public void getMessage() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            KayakoException param2 = (KayakoException) Reflector.getInstance("com.kayako.sdk.error.KayakoException");
            Reflector.setField(param2, "responseMessages", null);
            Reflector.setField(param2, "code", null);
            Reflector.setField(param2, "message", null);
            Reflector.setField(param2, "detailMessage", param1);
            Reflector.setField(param2, "cause", null);
            Reflector.setField(param2, "throwable", null);
            Reflector.setField(param2, "stackTrace", null);
            Reflector.setField(param2, "suppressedExceptions", null);
            /* Act */
            retval = param2.getMessage();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */
    @Test
    public void getResponseMessages() throws Throwable {
        ResponseMessages retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            KayakoException param4 = (KayakoException) Reflector.getInstance("com.kayako.sdk.error.KayakoException");
            Reflector.setField(param4, "responseMessages", null);
            Reflector.setField(param4, "code", null);
            Reflector.setField(param4, "message", param1);
            Reflector.setField(param4, "detailMessage", param3);
            Reflector.setField(param4, "cause", null);
            Reflector.setField(param4, "throwable", null);
            Reflector.setField(param4, "stackTrace", null);
            Reflector.setField(param4, "suppressedExceptions", null);
            /* Act */
            retval = param4.getResponseMessages();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */
    @Test
    public void getThrowable() throws Throwable {
        Throwable retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            KayakoException param4 = (KayakoException) Reflector.getInstance("com.kayako.sdk.error.KayakoException");
            Reflector.setField(param4, "responseMessages", null);
            Reflector.setField(param4, "code", null);
            Reflector.setField(param4, "message", param1);
            Reflector.setField(param4, "detailMessage", param3);
            Reflector.setField(param4, "cause", null);
            Reflector.setField(param4, "throwable", null);
            Reflector.setField(param4, "stackTrace", null);
            Reflector.setField(param4, "suppressedExceptions", null);
            /* Act */
            retval = param4.getThrowable();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }
}
