package com.kayako.sdk.error.response;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class ErrorTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Error */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_error_response_Error_getResponseMessageType_000_2ebb40d77e3bdd29() throws Throwable {
        Type retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            String param_7 = "";
            Error param_8 = (Error) Reflector.getInstance("com.kayako.sdk.error.response.Error");
            param_8.moreInfo = param_1;
            ;
            param_8.code = param_7;
            ;
            param_8.message = param_3;
            ;
            param_8.parameter = param_5;
            ;
            param_8.parameters = null;
            ;
            /* Act */
            retval = param_8.getResponseMessageType();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "name")));
            Assert.assertEquals("ERROR", ((String) Reflector.getInstanceField(retval, "name")));
            Assert.assertEquals(0, Reflector.getInstanceField(retval, "ordinal"));
        }
    }
}
