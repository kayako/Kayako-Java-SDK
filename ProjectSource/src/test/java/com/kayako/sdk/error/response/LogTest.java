package com.kayako.sdk.error.response;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class LogTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Log */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_error_response_Log_getResponseMessageType_000_b70788abab0fd225() throws Throwable {
        Type retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            Log param_4 = (Log) Reflector.getInstance("com.kayako.sdk.error.response.Log");
            param_4.message = param_1;
            ;
            param_4.level = param_3;
            ;
            /* Act */
            retval = param_4.getResponseMessageType();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            Assert.assertNotNull(((String) Reflector.getInstanceField(retval, "name")));
            Assert.assertEquals("LOG", ((String) Reflector.getInstanceField(retval, "name")));
            Assert.assertEquals(2, Reflector.getInstanceField(retval, "ordinal"));
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_error_response_Log_toString_000_5d712cee9e443259() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "WWWW";
            String param_3 = "LLL";
            Log param_4 = (Log) Reflector.getInstance("com.kayako.sdk.error.response.Log");
            param_4.message = param_1;
            ;
            param_4.level = param_3;
            ;
            /* Act */
            retval = param_4.toString();
        }
        {
            /* Assert result */
            Assert.assertNotNull(retval);
            Assert.assertEquals("Log{level=\'LLL\', message=\'WWWW\'}", retval);
        }
    }
}
