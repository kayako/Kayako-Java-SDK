package com.kayako.sdk.error.response;

import com.diffblue.deeptestutils.Reflector;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class LogTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Log */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void init() throws Throwable {
        Log instance;
        {
            /* Arrange */
            String level = null;
            String message = null;
            /* Act */
            /* Creating object to test constructor */
            instance = new Log(level, message);
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getResponseMessageType() throws Throwable {
        Type retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            Log param4 = (Log) Reflector.getInstance("com.kayako.sdk.error.response.Log");
            param4.message = param1;
            ;
            param4.level = param3;
            ;
            /* Act */
            retval = param4.getResponseMessageType();
        }
        {
            /* Assert result */
            assertNotNull(retval);
            assertNotNull(((String) Reflector.getInstanceField(retval, "name")));
            assertEquals("LOG", ((String) Reflector.getInstanceField(retval, "name")));
            assertEquals(2, Reflector.getInstanceField(retval, "ordinal"));
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void toString1() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "WWWW";
            String param3 = "LLL";
            Log param4 = (Log) Reflector.getInstance("com.kayako.sdk.error.response.Log");
            param4.message = param1;
            ;
            param4.level = param3;
            ;
            /* Act */
            retval = param4.toString();
        }
        {
            /* Assert result */
            assertNotNull(retval);
            assertEquals("Log{level=\'LLL\', message=\'WWWW\'}", retval);
        }
    }
}
