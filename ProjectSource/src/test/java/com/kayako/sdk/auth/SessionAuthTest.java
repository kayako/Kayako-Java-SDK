package com.kayako.sdk.auth;

import com.diffblue.deeptestutils.Reflector;
import java.util.HashMap;
import java.util.Map;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class SessionAuthTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: SessionAuth */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void init() throws Throwable {
        SessionAuth instance;
        {
            /* Arrange */
            String sessionId = null;
            String userAgent = null;
            /* Act */
            /* Creating object to test constructor */
            instance = new SessionAuth(sessionId, userAgent);
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 34 branch to line 34
     * conditional line 35 branch to line 35
     */
    @Test
    public void getHeaders() throws Throwable {
        Map<String, String> retval;
        {
            /* Arrange */
            SessionAuth param0 = (SessionAuth) Reflector.getInstance("com.kayako.sdk.auth.SessionAuth");
            Reflector.setField(param0, "userAgent", null);
            Reflector.setField(param0, "sessionId", null);
            /* Act */
            retval = param0.getHeaders();
        }
        {
            /* Assert result */
            assertNotNull(retval);
            HashMap hashMap = new HashMap();
            hashMap.put("X-Session-ID", null);
            hashMap.put("User-Agent", null);
            assertEquals(hashMap, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getSessionId() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            SessionAuth param2 = (SessionAuth) Reflector.getInstance("com.kayako.sdk.auth.SessionAuth");
            Reflector.setField(param2, "userAgent", param1);
            Reflector.setField(param2, "sessionId", null);
            /* Act */
            retval = param2.getSessionId();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getUserAgent() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            SessionAuth param2 = (SessionAuth) Reflector.getInstance("com.kayako.sdk.auth.SessionAuth");
            Reflector.setField(param2, "userAgent", null);
            Reflector.setField(param2, "sessionId", param1);
            /* Act */
            retval = param2.getUserAgent();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }
}
