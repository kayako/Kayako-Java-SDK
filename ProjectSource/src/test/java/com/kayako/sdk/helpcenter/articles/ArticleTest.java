package com.kayako.sdk.helpcenter.articles;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class ArticleTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Article */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getAuthor_000_7dd7e303bd29a9be() throws Throwable {
        com.kayako.sdk.helpcenter.user.UserMinimal retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            Long param_6 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param_6, "value", 0L);
            Article param_7 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_7, "lastPosted", null);
            Reflector.setField(param_7, "lastUpdated", null);
            Reflector.setField(param_7, "author", null);
            Reflector.setField(param_7, "section", null);
            Reflector.setField(param_7, "id", param_6);
            Reflector.setField(param_7, "title", param_3);
            Reflector.setField(param_7, "uuid", param_5);
            Reflector.setField(param_7, "contents", param_1);
            /* Act */
            retval = param_7.getAuthor();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getContents_000_edc1fcd263b5c0f2() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            Article param_4 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_4, "lastPosted", null);
            Reflector.setField(param_4, "lastUpdated", null);
            Reflector.setField(param_4, "author", null);
            Reflector.setField(param_4, "section", null);
            Reflector.setField(param_4, "id", null);
            Reflector.setField(param_4, "title", param_1);
            Reflector.setField(param_4, "uuid", param_3);
            Reflector.setField(param_4, "contents", null);
            /* Act */
            retval = param_4.getContents();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getId_000_3a99d2013e4d73af() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            Article param_6 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_6, "lastPosted", null);
            Reflector.setField(param_6, "lastUpdated", null);
            Reflector.setField(param_6, "author", null);
            Reflector.setField(param_6, "section", null);
            Reflector.setField(param_6, "id", null);
            Reflector.setField(param_6, "title", param_3);
            Reflector.setField(param_6, "uuid", param_5);
            Reflector.setField(param_6, "contents", param_1);
            /* Act */
            retval = param_6.getId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getLastPosted_000_9efee29cf1e34618() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            Long param_6 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param_6, "value", 0L);
            Article param_7 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_7, "lastPosted", null);
            Reflector.setField(param_7, "lastUpdated", null);
            Reflector.setField(param_7, "author", null);
            Reflector.setField(param_7, "section", null);
            Reflector.setField(param_7, "id", param_6);
            Reflector.setField(param_7, "title", param_3);
            Reflector.setField(param_7, "uuid", param_5);
            Reflector.setField(param_7, "contents", param_1);
            /* Act */
            retval = param_7.getLastPosted();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getLastUpdated_000_11832c9969d86bde() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            Article param_6 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_6, "lastPosted", null);
            Reflector.setField(param_6, "lastUpdated", null);
            Reflector.setField(param_6, "author", null);
            Reflector.setField(param_6, "section", null);
            Reflector.setField(param_6, "id", null);
            Reflector.setField(param_6, "title", param_3);
            Reflector.setField(param_6, "uuid", param_5);
            Reflector.setField(param_6, "contents", param_1);
            /* Act */
            retval = param_6.getLastUpdated();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getSection_000_54709041c16c4e24() throws Throwable {
        com.kayako.sdk.helpcenter.section.Section retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            String param_5 = "";
            Article param_6 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_6, "lastPosted", null);
            Reflector.setField(param_6, "lastUpdated", null);
            Reflector.setField(param_6, "author", null);
            Reflector.setField(param_6, "section", null);
            Reflector.setField(param_6, "id", null);
            Reflector.setField(param_6, "title", param_3);
            Reflector.setField(param_6, "uuid", param_5);
            Reflector.setField(param_6, "contents", param_1);
            /* Act */
            retval = param_6.getSection();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getTitle_000_760b007d031948e9() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            Article param_4 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_4, "lastPosted", null);
            Reflector.setField(param_4, "lastUpdated", null);
            Reflector.setField(param_4, "author", null);
            Reflector.setField(param_4, "section", null);
            Reflector.setField(param_4, "id", null);
            Reflector.setField(param_4, "title", null);
            Reflector.setField(param_4, "uuid", param_3);
            Reflector.setField(param_4, "contents", param_1);
            /* Act */
            retval = param_4.getTitle();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_articles_Article_getUuid_000_b7099f3ef102b383() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            Article param_4 = (Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_4, "lastPosted", null);
            Reflector.setField(param_4, "lastUpdated", null);
            Reflector.setField(param_4, "author", null);
            Reflector.setField(param_4, "section", null);
            Reflector.setField(param_4, "id", null);
            Reflector.setField(param_4, "title", param_3);
            Reflector.setField(param_4, "uuid", null);
            Reflector.setField(param_4, "contents", param_1);
            /* Act */
            retval = param_4.getUuid();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
}
