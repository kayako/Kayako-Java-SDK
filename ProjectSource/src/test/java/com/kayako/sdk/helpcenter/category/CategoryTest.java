package com.kayako.sdk.helpcenter.category;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class CategoryTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Category */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_category_Category_getDescription_000_256363dd1db9ba1a() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            Category param_2 = (Category) Reflector.getInstance("com.kayako.sdk.helpcenter.category.Category");
            Reflector.setField(param_2, "description", null);
            Reflector.setField(param_2, "title", param_1);
            Reflector.setField(param_2, "displayOrder", null);
            Reflector.setField(param_2, "id", null);
            /* Act */
            retval = param_2.getDescription();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_category_Category_getDisplayOrder_000_819c207e13cb883f() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            Category param_4 = (Category) Reflector.getInstance("com.kayako.sdk.helpcenter.category.Category");
            Reflector.setField(param_4, "description", param_1);
            Reflector.setField(param_4, "title", param_3);
            Reflector.setField(param_4, "displayOrder", null);
            Reflector.setField(param_4, "id", null);
            /* Act */
            retval = param_4.getDisplayOrder();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_category_Category_getId_000_9cd85674f3e4cc8b() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param_1 = "";
            String param_3 = "";
            Category param_4 = (Category) Reflector.getInstance("com.kayako.sdk.helpcenter.category.Category");
            Reflector.setField(param_4, "description", param_1);
            Reflector.setField(param_4, "title", param_3);
            Reflector.setField(param_4, "displayOrder", null);
            Reflector.setField(param_4, "id", null);
            /* Act */
            retval = param_4.getId();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void com_kayako_sdk_helpcenter_category_Category_getTitle_000_35c3b2afcd0e858f() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param_1 = "";
            Category param_2 = (Category) Reflector.getInstance("com.kayako.sdk.helpcenter.category.Category");
            Reflector.setField(param_2, "description", param_1);
            Reflector.setField(param_2, "title", null);
            Reflector.setField(param_2, "displayOrder", null);
            Reflector.setField(param_2, "id", null);
            /* Act */
            retval = param_2.getTitle();
        }
        {
            /* Assert result */
            Assert.assertEquals(null, retval);
        }
    }
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
}
