package com.kayako.sdk.helpcenter.section;

import com.diffblue.deeptestutils.Reflector;
import com.kayako.sdk.helpcenter.category.Category;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class SectionTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Section */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void init() throws Throwable {
        Section instance;
        {
            /* Act */
            /* Creating object to test constructor */
            instance = new Section();
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getCategory() throws Throwable {
        Category retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Section param6 = new Section();
            param6.setDisplay_order(null);
            param6.setCategory(null);
            param6.setId(null);
            param6.setTitle(param5);
            param6.setVisibility(param1);
            param6.setDescription(param3);
            /* Act */
            retval = param6.getCategory();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getDescription() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            Section param4 = new Section();
            param4.setDisplay_order(null);
            param4.setCategory(null);
            param4.setId(null);
            param4.setTitle(param3);
            param4.setVisibility(param1);
            param4.setDescription(null);
            /* Act */
            retval = param4.getDescription();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getDisplayorder() throws Throwable {
        Integer retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Section param6 = new Section();
            param6.setDisplay_order(null);
            param6.setCategory(null);
            param6.setId(null);
            param6.setTitle(param5);
            param6.setVisibility(param1);
            param6.setDescription(param3);
            /* Act */
            retval = param6.getDisplay_order();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getId() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            Section param6 = new Section();
            param6.setDisplay_order(null);
            param6.setCategory(null);
            param6.setId(null);
            param6.setTitle(param5);
            param6.setVisibility(param1);
            param6.setDescription(param3);
            /* Act */
            retval = param6.getId();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getTitle() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            Section param4 = new Section();
            param4.setDisplay_order(null);
            param4.setCategory(null);
            param4.setId(null);
            param4.setTitle(null);
            param4.setVisibility(param1);
            param4.setDescription(param3);
            /* Act */
            retval = param4.getTitle();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getVisibility() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            Section param4 = new Section();
            param4.setDisplay_order(null);
            param4.setCategory(null);
            param4.setId(null);
            param4.setTitle(param3);
            param4.setVisibility(null);
            param4.setDescription(param1);
            /* Act */
            retval = param4.getVisibility();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
}
