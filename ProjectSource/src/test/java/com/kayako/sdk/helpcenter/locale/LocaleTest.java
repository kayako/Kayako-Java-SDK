package com.kayako.sdk.helpcenter.locale;

import com.diffblue.deeptestutils.Reflector;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class LocaleTest {

    @Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Locale */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void init() throws Throwable {
        Locale instance;
        {
            /* Act */
            /* Creating object to test constructor */
            instance = new Locale();
            assertNotNull(instance);
        /* Method return type is void, or not expected to return */
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getDirection() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Locale param10 = new Locale();
            param10.setDirection(null);
            Reflector.setField(param10, "isPublic", null);
            param10.setRegion(param3);
            Reflector.setField(param10, "isLocalized", null);
            param10.setId(null);
            param10.setLocale(param9);
            param10.setNativeRegion(param1);
            param10.setName(param7);
            param10.setNativeName(param5);
            /* Act */
            retval = param10.getDirection();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getId() throws Throwable {
        Long retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            String param11 = "";
            Locale param12 = new Locale();
            param12.setDirection(param1);
            Reflector.setField(param12, "isPublic", null);
            param12.setRegion(param5);
            Reflector.setField(param12, "isLocalized", null);
            param12.setId(null);
            param12.setLocale(param11);
            param12.setNativeRegion(param3);
            param12.setName(param9);
            param12.setNativeName(param7);
            /* Act */
            retval = param12.getId();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getLocale() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Locale param10 = new Locale();
            param10.setDirection(param1);
            Reflector.setField(param10, "isPublic", null);
            param10.setRegion(param5);
            Reflector.setField(param10, "isLocalized", null);
            param10.setId(null);
            param10.setLocale(null);
            param10.setNativeRegion(param3);
            param10.setName(param9);
            param10.setNativeName(param7);
            /* Act */
            retval = param10.getLocale();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getName() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Locale param10 = new Locale();
            param10.setDirection(param1);
            Reflector.setField(param10, "isPublic", null);
            param10.setRegion(param5);
            Reflector.setField(param10, "isLocalized", null);
            param10.setId(null);
            param10.setLocale(param9);
            param10.setNativeRegion(param3);
            param10.setName(null);
            param10.setNativeName(param7);
            /* Act */
            retval = param10.getName();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getNativeName() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Locale param10 = new Locale();
            param10.setDirection(param1);
            Reflector.setField(param10, "isPublic", null);
            param10.setRegion(param5);
            Reflector.setField(param10, "isLocalized", null);
            param10.setId(null);
            param10.setLocale(param9);
            param10.setNativeRegion(param3);
            param10.setName(param7);
            param10.setNativeName(null);
            /* Act */
            retval = param10.getNativeName();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getNativeRegion() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Locale param10 = new Locale();
            param10.setDirection(param1);
            Reflector.setField(param10, "isPublic", null);
            param10.setRegion(param3);
            Reflector.setField(param10, "isLocalized", null);
            param10.setId(null);
            param10.setLocale(param9);
            param10.setNativeRegion(null);
            param10.setName(param7);
            param10.setNativeName(param5);
            /* Act */
            retval = param10.getNativeRegion();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void getRegion() throws Throwable {
        String retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            Locale param10 = new Locale();
            param10.setDirection(param1);
            Reflector.setField(param10, "isPublic", null);
            param10.setRegion(null);
            Reflector.setField(param10, "isLocalized", null);
            param10.setId(null);
            param10.setLocale(param9);
            param10.setNativeRegion(param3);
            param10.setName(param7);
            param10.setNativeName(param5);
            /* Act */
            retval = param10.getRegion();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void isLocalized() throws Throwable {
        Boolean retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            String param11 = "";
            Locale param12 = new Locale();
            param12.setDirection(param1);
            Reflector.setField(param12, "isPublic", null);
            param12.setRegion(param5);
            Reflector.setField(param12, "isLocalized", null);
            param12.setId(null);
            param12.setLocale(param11);
            param12.setNativeRegion(param3);
            param12.setName(param9);
            param12.setNativeName(param7);
            /* Act */
            retval = param12.isLocalized();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    @Test
    public void isPublic() throws Throwable {
        Boolean retval;
        {
            /* Arrange */
            String param1 = "";
            String param3 = "";
            String param5 = "";
            String param7 = "";
            String param9 = "";
            String param11 = "";
            Locale param12 = new Locale();
            param12.setDirection(param1);
            Reflector.setField(param12, "isPublic", null);
            param12.setRegion(param5);
            Reflector.setField(param12, "isLocalized", null);
            param12.setId(null);
            param12.setLocale(param11);
            param12.setNativeRegion(param3);
            param12.setName(param9);
            param12.setNativeName(param7);
            /* Act */
            retval = param12.isPublic();
        }
        {
            /* Assert result */
            assertEquals(null, retval);
        }
    }
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers the entire function.
     */
}
