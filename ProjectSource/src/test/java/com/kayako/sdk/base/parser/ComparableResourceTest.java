package com.kayako.sdk.base.parser;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class ComparableResourceTest {

    @org.junit.Rule
    public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: ComparableResource */
    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 19 branch to line 19
     * conditional line 19 branch to line 21
     */
    @Test
    public void com_kayako_sdk_base_parser_ComparableResource_equals_000_7532307e399a50c9() throws Throwable {
        boolean retval;
        {
            /* Arrange */
            Long param_11 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param_11, "value", 0L);
            String param_9 = "??????????????????";
            com.kayako.sdk.helpcenter.user.UserMinimal param_8 = (com.kayako.sdk.helpcenter.user.UserMinimal) Reflector.getInstance("com.kayako.sdk.helpcenter.user.UserMinimal");
            Reflector.setField(param_8, "presenceChannel", null);
            Reflector.setField(param_8, "fullName", param_9);
            Reflector.setField(param_8, "lastSeenAt", null);
            Reflector.setField(param_8, "id", null);
            Reflector.setField(param_8, "avatarUrl", null);
            Reflector.setField(param_8, "lastActiveAt", null);
            String param_6 = "??????????????????";
            String param_4 = "";
            String param_2 = "";
            com.kayako.sdk.helpcenter.articles.Article param_1 = (com.kayako.sdk.helpcenter.articles.Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_1, "lastPosted", param_11);
            Reflector.setField(param_1, "lastUpdated", null);
            Reflector.setField(param_1, "author", param_8);
            Reflector.setField(param_1, "section", null);
            Reflector.setField(param_1, "id", null);
            Reflector.setField(param_1, "title", param_4);
            Reflector.setField(param_1, "uuid", param_2);
            Reflector.setField(param_1, "contents", param_6);
            Object obj = null;
            /* Act */
            retval = param_1.equals(obj);
        }
        {
            /* Assert result */
            Assert.assertEquals(false, retval);
        }
    }

    /*
     * Test generated by Diffblue Deeptest.
     * This test case covers:
     * conditional line 19 branch to line 19
     */
    @Test
    public void com_kayako_sdk_base_parser_ComparableResource_equals_000_b16a2fd623430d09() throws Throwable {
        boolean retval;
        {
            /* Arrange */
            Long param_13 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param_13, "value", 0L);
            String param_11 = "";
            String param_9 = "";
            Long param_8 = (Long) Reflector.getInstance("java.lang.Long");
            Reflector.setField(param_8, "value", 0L);
            com.kayako.sdk.helpcenter.section.Section param_7 = (com.kayako.sdk.helpcenter.section.Section) Reflector.getInstance("com.kayako.sdk.helpcenter.section.Section");
            Reflector.setField(param_7, "display_order", null);
            Reflector.setField(param_7, "category", null);
            Reflector.setField(param_7, "id", param_8);
            Reflector.setField(param_7, "title", param_9);
            Reflector.setField(param_7, "visibility", null);
            Reflector.setField(param_7, "description", param_11);
            String param_5 = "";
            String param_3 = "";
            com.kayako.sdk.helpcenter.articles.Article param_2 = (com.kayako.sdk.helpcenter.articles.Article) Reflector.getInstance("com.kayako.sdk.helpcenter.articles.Article");
            Reflector.setField(param_2, "lastPosted", param_13);
            Reflector.setField(param_2, "lastUpdated", null);
            Reflector.setField(param_2, "author", null);
            Reflector.setField(param_2, "section", param_7);
            Reflector.setField(param_2, "id", null);
            Reflector.setField(param_2, "title", param_3);
            Reflector.setField(param_2, "uuid", null);
            Reflector.setField(param_2, "contents", param_5);
            Object param_0 = (Object) Reflector.getInstance("java.lang.Object");
            Object obj = param_0;
            /* Act */
            retval = param_2.equals(obj);
        }
        {
            /* Assert result */
            Assert.assertEquals(false, retval);
        }
    }
}
